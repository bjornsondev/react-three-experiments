{"version":3,"sources":["App.js","index.js"],"names":["Box","position","color","args","mesh","useRef","useFrame","current","rotation","x","y","castShadow","ref","attach","speed","factor","softShadows","App","className","colorManagement","shadowMap","receiveShadow","Math","PI","opacity","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-down","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAQA,SAASA,EAAT,GAAuC,IAAzBC,EAAwB,EAAxBA,SAAgBC,GAAQ,EAAdC,KAAc,EAARD,OACtBE,EAAOC,iBAAO,MAGpB,OAFAC,aAAS,kBAAOF,EAAKG,QAAQC,SAASC,EAAIL,EAAKG,QAAQC,SAASE,GAAK,OAGnE,uBAAMC,YAAU,EAACC,IAAKR,EAAMH,SAAUA,EAAtC,UACE,mCAAmBY,OAAO,WAAWV,KAAM,CAAC,EAAG,EAAG,KAClD,cAAC,IAAD,CAAoBU,OAAO,WAAWX,MAAOA,EAAOY,MAAO,EAAGC,OAAQ,QAT5EC,cAsDeC,MArCf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQC,iBAAe,EAACC,WAAS,EAACF,UAAU,SAA5C,UACE,cAAClB,EAAD,CAAKC,SAAU,CAAC,GAAI,GAAI,GAAIC,MAAM,QAClC,cAACF,EAAD,CAAKC,SAAU,CAAC,EAAG,GAAI,GAAIC,MAAM,SACjC,cAACF,EAAD,CAAKC,SAAU,CAAC,EAAG,GAAI,GAAIC,MAAM,UACjC,cAACF,EAAD,CAAKC,SAAU,EAAE,EAAG,GAAI,GAAIC,MAAM,WAElC,gCACE,uBAAMmB,eAAa,EAACb,SAAU,EAAEc,KAAKC,GAAK,EAAG,EAAG,GAAItB,SAAU,CAAC,GAAI,EAAG,GAAtE,UACE,qCAAqBY,OAAO,WAAWV,KAAM,CAAC,IAAI,OAClD,gCAAgBU,OAAO,WAAWW,QAAQ,aAK9C,kCACEb,YAAU,EACVV,SAAU,CAAC,GAAI,GAAI,IACnBwB,UAAW,IACXC,uBAAsB,KACtBC,wBAAuB,KACvBC,oBAAmB,GACnBC,sBAAqB,GACrBC,sBAAqB,GACrBC,oBAAmB,GACnBC,sBAAqB,KAEvB,8BAAcP,UAAW,KACzB,cAAC,IAAD,UClDRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8fce80dd.chunk.js","sourcesContent":["import './App.scss';\n\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport { OrbitControls, softShadows, MeshWobbleMaterial } from 'drei';\nimport { useRef } from 'react';\n\nsoftShadows();\n\nfunction Box({position, args, color}) {\n  const mesh = useRef(null);\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.02));\n\n  return (\n    <mesh castShadow ref={mesh} position={position}>\n      <boxBufferGeometry attach=\"geometry\" args={[2, 2, 2]} />\n      <MeshWobbleMaterial attach=\"material\" color={color} speed={1} factor={0.5}/>\n    </mesh>\n  );\n}\n\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Canvas colorManagement shadowMap className=\"canvas\">\n        <Box position={[0, -3, -3]} color=\"red\"/>\n        <Box position={[0, 3, -3]} color=\"blue\"/>\n        <Box position={[3, 0, -3]} color=\"green\"/>\n        <Box position={[-3, 0, -3]} color=\"yellow\"/>\n\n        <group>\n          <mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={[0, -5, 0]}>\n            <planeBufferGeometry attach=\"geometry\" args={[100,100]}/>\n            <shadowMaterial attach=\"material\" opacity=\"0.3\"/>\n          </mesh>\n        </group>\n\n\n        <directionalLight \n          castShadow\n          position={[20, 20, 10]}\n          intensity={1.5}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n          shadow-camera-left={-10}\n          shadow-camera-right={10}\n          shadow-camera-top={10}\n          shadow-camera-down={-10}\n        />\n        <ambientLight intensity={0.3}/>\n        <OrbitControls/>\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}